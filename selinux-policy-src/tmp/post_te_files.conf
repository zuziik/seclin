


































































































































































































































































































































##################################
#
# Core User configuration.
#

#
# gen_user(username, prefix, role_set, mls_defaultlevel, mls_range, [mcs_catetories])
#
# Note: Identities without a prefix will not be listed
# in the users_extra file used by genhomedircon.

#
# system_u is the user identity for system processes and objects.
# There should be no corresponding Unix user identity for system,
# and a user process should never be assigned the system user
# identity.
#
user system_u roles { system_r } level s0 range s0 - s0:c0.c1023;


#
# user_u is a generic user identity for Linux users who have no
# SELinux user identity defined.  The modified daemons will use
# this user identity in the security context if there is no matching
# SELinux user identity for a Linux user.  If you do not want to
# permit any access to such users, then remove this entry.
#
user user_u roles { user_r } level s0 range s0;

user staff_u roles { staff_r sysadm_r  } level s0 range s0 - s0:c0.c1023;

user sysadm_u roles { sysadm_r } level s0 range s0 - s0:c0.c1023;


# Until order dependence is fixed for users:

        user unconfined_u roles { unconfined_r system_r } level s0 range s0 - s0:c0.c1023;



#
# The following users correspond to Unix identities.
# These identities are typically assigned as the user attribute
# when login starts the user shell.  Users with access to the sysadm_r
# role should use the staff_r role instead of the user_r role when
# not in the sysadm_r.
#

	user root roles { sysadm_r staff_r  system_r } level s0 range s0 - s0:c0.c1023;



#
# Define the constraints
#
# constrain class_set perm_set expression ;
#
# expression : ( expression ) 
#	     | not expression
#	     | expression and expression
#	     | expression or expression
#	     | u1 op u2
#	     | r1 role_op r2
#	     | t1 op t2
#	     | u1 op names
#	     | u2 op names
#	     | r1 op names
#	     | r2 op names
#	     | t1 op names
#	     | t2 op names
#
# op : == | != 
# role_op : == | != | eq | dom | domby | incomp
#
# names : name | { name_list }
# name_list : name | name_list name		
#







########################################
#
# File rules
#


	
		constrain dir { ioctl read write create getattr setattr lock relabelfrom relabelto append unlink link rename execute swapon quotaon mounton add_name remove_name reparent search rmdir open audit_access execmod }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacfile
		);
	


	
		constrain file { ioctl read write create getattr setattr lock relabelfrom relabelto append unlink link rename execute swapon quotaon mounton execute_no_trans entrypoint execmod open audit_access }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacfile
		);
	


	
		constrain lnk_file { ioctl read write create getattr setattr lock relabelfrom relabelto append unlink link rename execute swapon quotaon mounton open audit_access execmod }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacfile
		);
	


	
		constrain fifo_file { ioctl read write create getattr setattr lock relabelfrom relabelto append unlink link rename execute swapon quotaon mounton open audit_access execmod }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacfile
		);
	


	
		constrain sock_file { ioctl read write create getattr setattr lock relabelfrom relabelto append unlink link rename execute swapon quotaon mounton open audit_access execmod }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacfile
		);
	


	
		constrain chr_file { ioctl read write create getattr setattr lock relabelfrom relabelto append unlink link rename execute swapon quotaon mounton execute_no_trans entrypoint execmod open audit_access }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacfile
		);
	


	
		constrain blk_file { ioctl read write create getattr setattr lock relabelfrom relabelto append unlink link rename execute swapon quotaon mounton open audit_access execmod }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacfile
		);
	


# SELinux object identity change constraint:
constrain { dir file lnk_file sock_file fifo_file chr_file blk_file } { create relabelto relabelfrom } 
(
	u1 == u2
	or t1 == can_change_object_identity
);

########################################
#
# Process rules
#


	constrain process { sigchld sigkill sigstop signull signal ptrace getsched setsched getsession getpgid setpgid getcap setcap share getattr setrlimit }
	(
		
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

		or t1 == ubacproc
	);


constrain process { transition dyntransition noatsecure siginh rlimitinh }
(
	u1 == u2
	or ( t1 == can_change_process_identity and t2 == process_user_target )
       	or ( t1 == cron_source_domain and ( t2 == cron_job_domain or u2 == system_u ) )
	or ( t1 == can_system_change and u2 == system_u )
	or ( t1 == process_uncond_exempt )
);

constrain process { transition dyntransition noatsecure siginh rlimitinh }
(
	r1 == r2 
	or ( t1 == can_change_process_role and t2 == process_user_target )
   	or ( t1 == cron_source_domain and t2 == cron_job_domain )
	or ( t1 == can_system_change and r2 == system_r )
	or ( t1 == process_uncond_exempt )
);

# These permissions do not have ubac constraints:
# fork
# setexec
# setfscreate
# setcurrent
# execmem
# execstack
# execheap
# setkeycreate
# setsockcreate

########################################
#
# File descriptor rules
#


	
		constrain fd { use }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacfd
		);
	


########################################
#
# Socket rules
#


	
		constrain socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain tcp_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind connectto newconn acceptfrom node_bind name_connect }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain udp_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind node_bind }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain rawip_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind node_bind }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain netlink_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain packet_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain key_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain unix_stream_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind connectto newconn acceptfrom }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain unix_dgram_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain netlink_route_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind nlmsg_read nlmsg_write }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain netlink_firewall_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind nlmsg_read nlmsg_write }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain netlink_tcpdiag_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind nlmsg_read nlmsg_write }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain netlink_nflog_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain netlink_xfrm_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind nlmsg_read nlmsg_write }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain netlink_selinux_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain netlink_audit_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind nlmsg_read nlmsg_write nlmsg_relay nlmsg_readpriv nlmsg_tty_audit }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain netlink_ip6fw_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind nlmsg_read nlmsg_write }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain netlink_dnrt_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain netlink_kobject_uevent_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain appletalk_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain dccp_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind node_bind name_connect }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain tun_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind attach_queue }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain netlink_iscsi_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain netlink_fib_lookup_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain netlink_connector_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain netlink_netfilter_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain netlink_generic_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain netlink_scsitransport_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain netlink_rdma_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


	
		constrain netlink_crypto_socket { ioctl read write create getattr setattr lock relabelfrom relabelto append bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacsock
		);
	


constrain { tcp_socket udp_socket rawip_socket netlink_socket packet_socket unix_stream_socket unix_dgram_socket appletalk_socket netlink_route_socket netlink_firewall_socket netlink_tcpdiag_socket netlink_nflog_socket netlink_xfrm_socket netlink_selinux_socket netlink_audit_socket netlink_ip6fw_socket netlink_dnrt_socket netlink_kobject_uevent_socket tun_socket netlink_iscsi_socket netlink_fib_lookup_socket netlink_connector_socket netlink_netfilter_socket netlink_generic_socket netlink_scsitransport_socket netlink_rdma_socket netlink_crypto_socket } { create relabelto relabelfrom } 
(
	u1 == u2
	or t1 == can_change_object_identity
);

########################################
#
# SysV IPC rules


	
		constrain sem { create destroy getattr setattr read write associate unix_read unix_write }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacipc
		);
	


	
		constrain msg { send receive }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacipc
		);
	


	
		constrain msgq { create destroy getattr setattr read write associate unix_read unix_write enqueue }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacipc
		);
	


	
		constrain shm { create destroy getattr setattr read write associate unix_read unix_write lock }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacipc
		);
	


	
		constrain ipc { create destroy getattr setattr read write associate unix_read unix_write }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacipc
		);
	


########################################
#
# SE-X Windows rules
#


	
		constrain x_drawable { create destroy read write blend getattr setattr list_child add_child remove_child list_property get_property set_property manage override show hide send receive }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacxwin
		);
	


	
		constrain x_screen { getattr setattr hide_cursor show_cursor saver_getattr saver_setattr saver_hide saver_show }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacxwin
		);
	


	
		constrain x_gc { create destroy getattr setattr use }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacxwin
		);
	


	
		constrain x_font { create destroy getattr add_glyph remove_glyph use }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacxwin
		);
	


	
		constrain x_colormap { create destroy read write getattr add_color remove_color install uninstall use }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacxwin
		);
	


	
		constrain x_property { create destroy read write append getattr setattr }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacxwin
		);
	


	
		constrain x_selection { read write getattr setattr }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacxwin
		);
	


	
		constrain x_cursor { create destroy read write getattr setattr use }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacxwin
		);
	


	
		constrain x_client { destroy getattr setattr manage }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacxwin
		);
	


	
		constrain x_device { getattr setattr use read write getfocus setfocus bell force_cursor freeze grab manage list_property get_property set_property add remove create destroy }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacxwin
		);
	


	
		constrain x_server { getattr setattr record debug grab manage }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacxwin
		);
	


	
		constrain x_extension { query use }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacxwin
		);
	


	
		constrain x_resource { read write }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacxwin
		);
	


	
		constrain x_event { send receive }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacxwin
		);
	


	
		constrain x_synthetic_event { send receive }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacxwin
		);
	


	
		constrain x_application_data { paste paste_after_confirm copy }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacxwin
		);
	


########################################
#
# D-BUS rules
#


	
		constrain dbus { acquire_svc send_msg }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacdbus
		);
	


########################################
#
# Key rules
#


	
		constrain key { view read write search link setattr create }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubackey
		);
	


########################################
#
# Database rules
#


	
		constrain db_database { create drop getattr setattr relabelfrom relabelto access install_module load_module get_param set_param }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacdb
		);
	


	
		constrain db_table { create drop getattr setattr relabelfrom relabelto select update insert delete lock }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacdb
		);
	


	
		constrain db_procedure { create drop getattr setattr relabelfrom relabelto execute entrypoint install }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacdb
		);
	


	
		constrain db_column { create drop getattr setattr relabelfrom relabelto select update insert }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacdb
		);
	


	
		constrain db_tuple { relabelfrom relabelto use select update insert delete }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacdb
		);
	


	
		constrain db_blob { create drop getattr setattr relabelfrom relabelto read write import export }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

			or t1 == ubacdb
		);
	





	
		constrain association { sendto recvfrom setcontext polmatch }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

		);
	


	
		constrain peer { recv }
		(
			
	
		u1 == u2
		or u1 == system_u
		or u2 == system_u
		or t1 != ubac_constrained_type
		or t2 != ubac_constrained_type
	

		);
	



# these classes have no UBAC restrictions
#class security
#class system
#class capability
#class memprotect
#class passwd			# userspace
#class node
#class netif
#class packet
#class capability2
#class nscd			# userspace
#class context			# userspace






